# Basic Playbook stucture
---
 - hosts:
   become: yes # gives the sudo access
   gather_facts: no
   tasks:
   #veriables-section 
   vars:
    - ver
    - ver
   - name: description 
     mod:
     register: result #gets stdout
   - debug: var=result
   #conditions
   - command:  /bin/sh
     when: ansible_facts == something
   #Error handling Exceptions 
   - block:
   - name: description
     mod:
   - debug:
       msg: 'oops! There was error in task'
   - rescue:
     - name: description
       mod:
   # Tags    
   - name: description
     mod:
     tags:
       - string
     #loop
     with_item:
      - item1
      - item2
     #jinja-veriables
   - name: description
     mode:
     Key: {{ver}}
     #untill - Executes untill statisfies the condition 
   - name: description
     mod:
     resgister: varible
     untill: veriable.find.something == something
     retries: number
     delay: number
   - debug: var=veriable

# playbook - ansible-playbook palybook.yml
# tags-taks - ansible-playbook playbook.yml --tag 'tag-name'
# skip-tags-usingtags- ansible-playbook playbook.yml --skip-tag 'tag-name'   
# limit-hosts - ansible-playbook playbook.yml --limit hosts
# jinja-vriables - ansible-playbook --extra-vars ver=something
# parallel-mode - ansible-playbook playbook.yml -f number of tasks
# debug - ansible -m debug -a "var=some-vars" hosts --> Checks the veriable in hosts file 

     
